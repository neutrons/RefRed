########################
### Project Metadata ###
########################

[project]
name = "RefRed"
description = "Liquids Reflectometer Data Reduction"
dynamic = ["version"]
requires-python = ">=3.10"
license = { text = "GPL version 3.0" }
readme = "README.md"
keywords = ["neutrons", "RefRed", "liquids reflectometer"]

dependencies = [
  "configobj",
  "h5py",
  "matplotlib",
  "pydantic",
  "numpy",
  "scipy",
  "PyQt5",
  "qtpy",
  "setuptools",
  "lr_reduction@git+https://github.com/neutrons/LiquidsReflectometer.git@v2.1.13#egg=lr_reduction",
]

[project.urls]
homepage = "https://github.com/neutrons/RefRed"
repository = "https://github.com/neutrons/RefRed"
issues = "https://github.com/neutrons/RefRed/issues"

[project.scripts]
RefRed = "RefRed.gui:main"

####################
### Build config ###
####################

[build-system]
requires = ["setuptools >= 47", "wheel", "toml", "versioningit"]
build-backend = "setuptools.build_meta"

[tool.versioningit.vcs]
method = "git"
default-tag = "5.0.0"

[tool.versioningit.next-version]
method = "minor"

[tool.versioningit.format]
distance = "{next_version}.dev{distance}"
dirty = "{version}+d{build_date:%Y%m%d}"
distance-dirty = "{next_version}.dev{distance}+d{build_date:%Y%m%d%H%M}"

[tool.versioningit.write]
file = "RefRed/_version.py"

[tool.setuptools.packages.find]
where = ["."]
exclude = ["test","docs*"]

[tool.setuptools.package-data]
"*" = ["*.yml", "*.yaml", "*.ini", "*.gx", "*.json", "*.ui"]

##########################
### Pytest and CodeCov ###
##########################

# [tool.coverage.run]
# source = ["src/RefRed"]
# omit = ["test/*"]

############
### Ruff ###
############

[tool.ruff]
line-length = 120
extend-exclude = [
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".tox",
  ".venv",
  "_build",
  "buck-out",
  "build",
  "dist",
  "test/data/*.py",
]

[tool.ruff.lint]
select = ["A", "ARG", "ASYNC", "BLE", "C90", "E", "F", "I", "N", "UP032", "W"]
ignore = [
  "ARG001", # Unused function argument
  "ARG002", # Unused method argument
  "ARG003", # Unused class method argument
  "C901",   # function is too complex
  "E402",   # module level import not at top of file
  "E722",   # do not use bare 'except'
  "F821",   # undefined name
  "N802",   # function name should be lowercase
  "N803",   # argument name should be lowercase
  "N806",   # variable in function should be lowercase
  "N815",   # mixed case class variable name
  "N816",   # mixed case global variable name
  "N999",   # invalid module name
]

[tool.mypy]
ignore_missing_imports = true
allow_untyped_globals = true
